{"ast":null,"code":"var _jsxFileName = \"D:\\\\final wala fix\\\\frontend\\\\src\\\\pages\\\\weather.jsx\";\nconst express = require(\"express\");\nconst axios = require(\"axios\");\nconst moment = require(\"moment\");\nconst {\n  renderToString\n} = require(\"react-dom/server\");\nconst React = require(\"react\");\nimport Newsletter from \"../shared/Newsletter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst app = express();\n\n// Set the view engine to JSX\napp.set(\"view engine\", \"jsx\");\napp.engine(\"jsx\", require(\"express-react-views\").createEngine());\n\n// Serve the public folder as static files\napp.use(express.static(\"public\"));\n\n// Define the WeatherApp component\nconst WeatherApp = ({\n  forecasts\n}) => /*#__PURE__*/_jsxDEV(\"html\", {\n  children: [/*#__PURE__*/_jsxDEV(\"head\", {\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      type: \"text/css\",\n      href: \"/style.css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://use.fontawesome.com/releases/v5.14.0/css/all.css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .card {\n          display: inline-block;\n          margin-right: 10px; /* Adjust margin as needed */\n        }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather App using NodeJS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"/weather\",\n        method: \"get\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"city\",\n          placeholder: \"Enter city name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"startDate\",\n          children: \"Start Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"startDate\",\n          name: \"startDate\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"endDate\",\n          children: \"End Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"endDate\",\n          name: \"endDate\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Get Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), forecasts.map(forecast => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [forecast.weather ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-thermometer-half\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), \" \", forecast.weather.main.temp, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-cloud\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), \" \", forecast.weather.weather[0].main]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-map-marker-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), \" \", forecast.weather.name, \", \", forecast.weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No weather data available for \", forecast.date, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", forecast.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, forecast.date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Newsletter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this);\n\n// Render the WeatherApp component when the root URL is accessed\n_c = WeatherApp;\napp.get(\"/\", async (req, res) => {\n  try {\n    // Default values for weather and error\n    const forecasts = [];\n    // Render the WeatherApp component to a string\n    const appString = renderToString( /*#__PURE__*/_jsxDEV(WeatherApp, {\n      forecasts: forecasts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 38\n    }, this));\n    // Render the WeatherApp component\n    res.render(\"jsx\", {\n      appString\n    });\n  } catch (error) {\n    res.status(500).send(\"Internal Server Error\");\n  }\n});\n\n// Handle the /weather route\napp.get(\"/weather\", async (req, res) => {\n  try {\n    // Get the city, start date, and end date from the query parameters\n    const city = req.query.city;\n    const startDate = moment(req.query.startDate);\n    const endDate = moment(req.query.endDate);\n    const apiKey = \"29d59a639acae276d7c8ac8fe6b4d060\"; // Replace with your OpenWeatherMap API key\n\n    // Array to store the forecasts for each date\n    const forecasts = [];\n\n    // Loop through each date in the range\n    let currentDate = moment(startDate);\n    while (currentDate.isSameOrBefore(endDate)) {\n      try {\n        // Construct the API URL for the current date\n        const APIUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&dt=${currentDate.unix()}&appid=${apiKey}`;\n\n        // Fetch weather data for the current date\n        const response = await axios.get(APIUrl);\n\n        // Convert temperature from Fahrenheit to Celsius\n        const temperatureCelsius = (response.data.main.temp - 32) * 5 / 9;\n        response.data.main.temp = temperatureCelsius.toFixed(2); // Round to 2 decimal places\n\n        forecasts.push({\n          date: currentDate.format(\"YYYY-MM-DD\"),\n          weather: response.data\n        });\n      } catch (error) {\n        // If an error occurs, push null for the current date\n        forecasts.push({\n          date: currentDate.format(\"YYYY-MM-DD\"),\n          weather: null\n        });\n      }\n\n      // Move to the next date\n      currentDate.add(1, \"days\");\n    }\n\n    // Render the WeatherApp component with the weather forecasts\n    const appString = renderToString( /*#__PURE__*/_jsxDEV(WeatherApp, {\n      forecasts: forecasts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 38\n    }, this));\n    res.render(\"jsx\", {\n      appString\n    });\n  } catch (error) {\n    res.status(500).send(\"Internal Server Error\");\n  }\n});\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["express","require","axios","moment","renderToString","React","Newsletter","jsxDEV","_jsxDEV","Fragment","_Fragment","app","set","engine","createEngine","use","static","WeatherApp","forecasts","children","fileName","_jsxFileName","lineNumber","columnNumber","rel","type","href","className","action","method","name","placeholder","required","htmlFor","id","map","forecast","weather","main","temp","sys","country","date","_c","get","req","res","appString","render","error","status","send","city","query","startDate","endDate","apiKey","currentDate","isSameOrBefore","APIUrl","unix","response","temperatureCelsius","data","toFixed","push","format","add","$RefreshReg$"],"sources":["D:/final wala fix/frontend/src/pages/weather.jsx"],"sourcesContent":["const express = require(\"express\");\r\nconst axios = require(\"axios\");\r\nconst moment = require(\"moment\");\r\nconst { renderToString } = require(\"react-dom/server\");\r\nconst React = require(\"react\");\r\nimport Newsletter from \"../shared/Newsletter\";\r\n\r\nconst app = express();\r\n\r\n// Set the view engine to JSX\r\napp.set(\"view engine\", \"jsx\");\r\napp.engine(\"jsx\", require(\"express-react-views\").createEngine());\r\n\r\n// Serve the public folder as static files\r\napp.use(express.static(\"public\"));\r\n\r\n// Define the WeatherApp component\r\nconst WeatherApp = ({ forecasts }) => (\r\n  <html>\r\n    <head>\r\n      <title>Weather App</title>\r\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"/style.css\" />\r\n      <link\r\n        rel=\"stylesheet\"\r\n        href=\"https://use.fontawesome.com/releases/v5.14.0/css/all.css\"\r\n      />\r\n      <style>\r\n        {`\r\n        .card {\r\n          display: inline-block;\r\n          margin-right: 10px; /* Adjust margin as needed */\r\n        }\r\n        `}\r\n      </style>\r\n    </head>\r\n    <body>\r\n      <div className=\"container\">\r\n        <h1>Weather App using NodeJS</h1>\r\n        <form action=\"/weather\" method=\"get\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"city\"\r\n            placeholder=\"Enter city name\"\r\n            required\r\n          />\r\n          <label htmlFor=\"startDate\">Start Date:</label>\r\n          <input type=\"date\" id=\"startDate\" name=\"startDate\" required />\r\n          <label htmlFor=\"endDate\">End Date:</label>\r\n          <input type=\"date\" id=\"endDate\" name=\"endDate\" required />\r\n          <button type=\"submit\">Get Weather</button>\r\n        </form>\r\n        {forecasts.map((forecast) => (\r\n          <div className=\"card\" key={forecast.date}>\r\n            {forecast.weather ? (\r\n              <>\r\n                <p>\r\n                  <i className=\"fas fa-thermometer-half\"></i>{\" \"}\r\n                  {forecast.weather.main.temp}&deg;C\r\n                </p>\r\n                <p>\r\n                  <i className=\"fas fa-cloud\"></i>{\" \"}\r\n                  {forecast.weather.weather[0].main}\r\n                </p>\r\n                <p>\r\n                  <i className=\"fas fa-map-marker-alt\"></i>{\" \"}\r\n                  {forecast.weather.name}, {forecast.weather.sys.country}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <p>No weather data available for {forecast.date}.</p>\r\n            )}\r\n            <p>Date: {forecast.date}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Newsletter/>\r\n    </body>\r\n  </html>\r\n);\r\n\r\n// Render the WeatherApp component when the root URL is accessed\r\napp.get(\"/\", async (req, res) => {\r\n  try {\r\n    // Default values for weather and error\r\n    const forecasts = [];\r\n    // Render the WeatherApp component to a string\r\n    const appString = renderToString(<WeatherApp forecasts={forecasts} />);\r\n    // Render the WeatherApp component\r\n    res.render(\"jsx\", { appString });\r\n  } catch (error) {\r\n    res.status(500).send(\"Internal Server Error\");\r\n  }\r\n});\r\n\r\n// Handle the /weather route\r\napp.get(\"/weather\", async (req, res) => {\r\n  try {\r\n    // Get the city, start date, and end date from the query parameters\r\n    const city = req.query.city;\r\n    const startDate = moment(req.query.startDate);\r\n    const endDate = moment(req.query.endDate);\r\n    const apiKey = \"29d59a639acae276d7c8ac8fe6b4d060\"; // Replace with your OpenWeatherMap API key\r\n\r\n    // Array to store the forecasts for each date\r\n    const forecasts = [];\r\n\r\n    // Loop through each date in the range\r\n    let currentDate = moment(startDate);\r\n    while (currentDate.isSameOrBefore(endDate)) {\r\n      try {\r\n        // Construct the API URL for the current date\r\n        const APIUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&dt=${currentDate.unix()}&appid=${apiKey}`;\r\n\r\n        // Fetch weather data for the current date\r\n        const response = await axios.get(APIUrl);\r\n\r\n        // Convert temperature from Fahrenheit to Celsius\r\n        const temperatureCelsius = ((response.data.main.temp - 32) * 5) / 9;\r\n        response.data.main.temp = temperatureCelsius.toFixed(2); // Round to 2 decimal places\r\n\r\n        forecasts.push({\r\n          date: currentDate.format(\"YYYY-MM-DD\"),\r\n          weather: response.data,\r\n        });\r\n      } catch (error) {\r\n        // If an error occurs, push null for the current date\r\n        forecasts.push({\r\n          date: currentDate.format(\"YYYY-MM-DD\"),\r\n          weather: null,\r\n        });\r\n      }\r\n\r\n      // Move to the next date\r\n      currentDate.add(1, \"days\");\r\n    }\r\n\r\n    // Render the WeatherApp component with the weather forecasts\r\n    const appString = renderToString(<WeatherApp forecasts={forecasts} />);\r\n    res.render(\"jsx\", { appString });\r\n  } catch (error) {\r\n    res.status(500).send(\"Internal Server Error\");\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}