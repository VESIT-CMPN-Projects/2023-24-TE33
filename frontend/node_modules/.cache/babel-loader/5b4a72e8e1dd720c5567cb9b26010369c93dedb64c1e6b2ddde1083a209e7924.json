{"ast":null,"code":"var _jsxFileName = \"C:\\\\final wala fix\\\\frontend\\\\src\\\\shared\\\\Newsletter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Newsletter.css\";\nimport { Container, Row, Col } from 'reactstrap';\nimport MaleTourist from \"../assets/images/male-tourist.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Newsletter = () => {\n  _s();\n  const [subscribed, setSubscribed] = useState(false);\n  const handleSubscribe = () => {\n    // Add logic here to handle subscription (e.g., send request to server)\n    // For demonstration, just setting subscribed to true after clicking Subscribe button\n    setSubscribed(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"newsletter\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newsletter__content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Subscribe to get Useful Traveling Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"newsletter__input\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Enter Your Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn newsletter__btn\",\n                onClick: handleSubscribe,\n                children: \"Subscribe\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), subscribed ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Subscribed successfully!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Thank you for subcribing stay tuned.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"newsletter__img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: MaleTourist,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Newsletter, \"XftjTz7cdp66AWREUYZWTgkwWiM=\");\n_c = Newsletter;\nexport default Newsletter;\nvar _c;\n$RefreshReg$(_c, \"Newsletter\");","map":{"version":3,"names":["React","useState","Container","Row","Col","MaleTourist","jsxDEV","_jsxDEV","Newsletter","_s","subscribed","setSubscribed","handleSubscribe","className","children","lg","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/final wala fix/frontend/src/shared/Newsletter.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./Newsletter.css\";\r\n\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport MaleTourist from \"../assets/images/male-tourist.png\";\r\n\r\nconst Newsletter = () => {\r\n  const [subscribed, setSubscribed] = useState(false);\r\n\r\n  const handleSubscribe = () => {\r\n    // Add logic here to handle subscription (e.g., send request to server)\r\n    // For demonstration, just setting subscribed to true after clicking Subscribe button\r\n    setSubscribed(true);\r\n  };\r\n\r\n  return (\r\n    <section className='newsletter'>\r\n      <Container>\r\n        <Row>\r\n          <Col lg=\"6\">\r\n            <div className=\"newsletter__content\">\r\n              <h2>Subscribe to get Useful Traveling Information</h2>\r\n\r\n              <div className=\"newsletter__input\">\r\n                <input type=\"email\" placeholder='Enter Your Email' />\r\n                <button className='btn newsletter__btn' onClick={handleSubscribe}>Subscribe</button>\r\n              </div>\r\n\r\n              {subscribed ? <p>Subscribed successfully!</p> : null}\r\n\r\n              <p>Thank you for subcribing stay tuned.</p>\r\n            </div>\r\n          </Col>\r\n          <Col lg=\"6\">\r\n            <div className=\"newsletter__img\">\r\n              <img src={MaleTourist} alt=\"\" />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Newsletter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AAEzB,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,YAAY;AAChD,OAAOC,WAAW,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACA;IACAD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACEJ,OAAA;IAASM,SAAS,EAAC,YAAY;IAAAC,QAAA,eAC7BP,OAAA,CAACL,SAAS;MAAAY,QAAA,eACRP,OAAA,CAACJ,GAAG;QAAAW,QAAA,gBACFP,OAAA,CAACH,GAAG;UAACW,EAAE,EAAC,GAAG;UAAAD,QAAA,eACTP,OAAA;YAAKM,SAAS,EAAC,qBAAqB;YAAAC,QAAA,gBAClCP,OAAA;cAAAO,QAAA,EAAI;YAA6C;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAEtDZ,OAAA;cAAKM,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAChCP,OAAA;gBAAOa,IAAI,EAAC,OAAO;gBAACC,WAAW,EAAC;cAAkB;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACrDZ,OAAA;gBAAQM,SAAS,EAAC,qBAAqB;gBAACS,OAAO,EAAEV,eAAgB;gBAAAE,QAAA,EAAC;cAAS;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjF,CAAC,EAELT,UAAU,gBAAGH,OAAA;cAAAO,QAAA,EAAG;YAAwB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,GAAG,IAAI,eAEpDZ,OAAA;cAAAO,QAAA,EAAG;YAAoC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNZ,OAAA,CAACH,GAAG;UAACW,EAAE,EAAC,GAAG;UAAAD,QAAA,eACTP,OAAA;YAAKM,SAAS,EAAC,iBAAiB;YAAAC,QAAA,eAC9BP,OAAA;cAAKgB,GAAG,EAAElB,WAAY;cAACmB,GAAG,EAAC;YAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACV,EAAA,CApCID,UAAU;AAAAiB,EAAA,GAAVjB,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}